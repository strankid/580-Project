
@article{1,
AUTHOR = {Prakasam, Elakkiya and Manoharan, Arun},
TITLE = {A Cache Efficient One Hashing Blocked Bloom Filter (OHBB) for Random Strings and the K-mer Strings in DNA Sequence},
JOURNAL = {Symmetry},
VOLUME = {14},
YEAR = {2022},
NUMBER = {9},
ARTICLE-NUMBER = {1911},
URL = {https://www.mdpi.com/2073-8994/14/9/1911},
ISSN = {2073-8994},
ABSTRACT = {Bloom filters are widely used in genome assembly, IoT applications and several network applications such as symmetric encryption algorithms, and blockchain applications owing to their advantages of fast querying, despite some false positives in querying the input elements. There are many research works carried out to improve both the insertion and querying speed or reduce the false-positive or reduce the storage requirements separately. However, the optimization of all the aforementioned parameters is quite challenging with the existing reported systems. This work proposes to simultaneously improve the insertion and querying speeds by introducing a Cache-efficient One-Hashing Blocked Bloom filter. The proposed method aims to reduce the number of memory accesses required for querying elements into one by splitting the memory into blocks where the block size is equal to the cache line size of the memory. In the proposed filter, each block has further been split into partitions where the size of each partition is the prime number. For insertion and query, one hash value is required, which yields different values when modulo divided with prime numbers. The speed is accelerated using simple hash functions where the hash function is called only once. The proposed method has been implemented and validated using random strings and symmetric K-mer datasets used in the gene assembly. The simulation results show that the proposed filter outperforms the Standard Bloom Filter in terms of the insertion and querying speed.},
DOI = {10.3390/sym14091911}
}
@ARTICLE{2,  author={Hua, Yu and Xiao, Bin and Veeravalli, Bharadwaj and Feng, Dan},  journal={IEEE Transactions on Computers},   title={Locality-Sensitive Bloom Filter for Approximate Membership Query},   year={2012},  volume={61},  number={6},  pages={817-830},  doi={10.1109/TC.2011.108}}
}
@ARTICLE{3,  author={Luo, Lailong and Guo, Deke and Ma, Richard T. B. and Rottenstreich, Ori and Luo, Xueshan},  journal={IEEE Communications Surveys & Tutorials},   title={Optimizing Bloom Filter: Challenges, Solutions, and Comparisons},   year={2019},  volume={21},  number={2},  pages={1912-1949},  doi={10.1109/COMST.2018.2889329}}